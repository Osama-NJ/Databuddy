---
- hosts: "{{hosts_group | default('infra-nodes')}}"
  name: Setup Infrastructure Nodes
  remote_user: ubuntu
  gather_facts: yes
  environment:
    PIP_BREAK_SYSTEM_PACKAGES: 1

  tasks: 

    - name: Create dockernev
      become: yes
      ansible.builtin.file:
        path: "/.dockerenv"
        state: touch
    
    - name: Apt Update
      become: true
      ansible.builtin.apt:
        update_cache: yes
    
    - name: Apt Upgrade
      become: true
      ansible.builtin.apt:
        name: "*"
        state: latest

    - name: Update install timesyncd
      become: true
      apt:
        name: systemd-timesyncd
        state: latest

    - name: Force NTP Sync
      ansible.builtin.shell : "sudo systemctl restart systemd-timesyncd.service"

    - name: Set Timezone to UTC
      ansible.builtin.shell : "sudo timedatectl set-timezone UTC"

    - name : Clean Docker Convinience Script Repository
      become: true
      apt_repository:
        repo: deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ansible_facts['lsb']['codename']}} stable
        state: absent

    - name: Clean Docker Convinience Script GPG apt Key
      become: true
      apt_key:
        id: 0x9DC858229FC7DD38854AE2D88D81803C0EBFCD88
        validate_certs: false
        state: absent

    - name: Add Docker GPG apt Key
      become: true
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        validate_certs: false
        state: present
    

    - name: Add Docker Repository
      become: true
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu {{ansible_facts['lsb']['codename']}} stable
        state: present
  
    - name: Apt Update
      become: true
      ansible.builtin.apt:
        update_cache: yes
    
    - name: Apt Upgrade
      become: true
      ansible.builtin.apt:
        name: "*"
        state: latest

    - name: Update install git
      become: true
      apt:
        name: git
        state: latest
    
    - name: Update install make
      become: true
      apt:
        name: make
        state: latest
    
    - name: Update install pip
      become: true
      apt:
        name: pip
        state: latest

    - name: Update install curl
      become: true
      apt:
        name: curl
        state: latest
    
    - name: Update install unzip
      become: true
      apt:
        name: unzip
        state: latest
    
    - name: Update install tar
      become: true
      apt:
        name: tar
        state: latest

    - name: Update install rsync
      become: true
      apt:
        name: rsync
        state: latest

    - name: Update apt and install docker-ce
      become: true
      apt:
        name: docker-ce
        state: latest
    
    - name: Update apt and install docker-compose
      become: true
      apt:
        name: docker-compose-plugin
        state: latest

    - name: Add user to docker group
      become: true
      ansible.builtin.user:
        name: ubuntu
        shell: /bin/bash
        groups: docker
        append: yes

    - name: Ensure pip is latest version
      become: true
      ansible.builtin.shell: python3 -m pip install --yes --upgrade pip || exit 0
    
    - name: Install jsondiff python package if missing
      become: yes
      ansible.builtin.pip:
        executable: pip3
        name: jsondiff
      when: inventory_hostname in groups['swarm-masters'] or inventory_hostname in groups['swarm-managers']
        
    - name: Install pyyaml python package if missing
      become: yes
      ansible.builtin.pip:
        executable: pip3
        name: pyyaml
      when: inventory_hostname in groups['swarm-masters'] or inventory_hostname in groups['swarm-managers']
    
    - name: Install docker python package if missing
      become: yes
      ansible.builtin.pip:
        executable: pip3
        name: docker
      when: inventory_hostname in groups['swarm-masters'] or inventory_hostname in groups['swarm-managers']
    
    - name: Add or modify nofile soft limit
      become: true 
      community.general.pam_limits:
        domain: '*'
        limit_type: soft
        limit_item: nofile
        value: 50000
        use_max: true
      register: resultSoft

    - name: Add or modify nofile hard limit. Keep or set the maximal value
      become: true
      community.general.pam_limits:
        domain: '*'
        limit_type: hard
        limit_item: nofile
        value: 50000
        use_max: true
      register: resultHard

    - name: Reboot nodes that have a changed ulimit
      become: true
      ansible.builtin.reboot:
        reboot_timeout: 3600
        post_reboot_delay: 30
        test_command: systemctl is-active docker
      when: (resultHard.changed or resultSoft.changed)
      throttle: 1
    
    - name: Add Ansible Public Key
      ansible.posix.authorized_key:
        user: root
        state: present
        key: "{{lookup('file', 'ansible-key.pub') }}" 
   
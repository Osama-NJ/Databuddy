---
- hosts: tool
  name: "Deploy CI"
  remote_user: root
  gather_facts: yes
  become: no    
  vars:
    working_dir_name: ci
    woodpecker_data_dir: /data/woodpecker
    woodpecker_agent_data_dir: /data/woodpecker-agent
    #woodpecker vars
    woodpecker_open: true
    woodpecker_host: "ci.databuddy.cc"
    woodpecker_orgs: databuddy-analytics
    woodpecker_admin: izadoesdev, TareqK
    woodpecker_repo_owners: databuddy-analytics, izadoesdev
    woodpecker_github: true
    woodpecker_github_client_id: "Ov23ctD4OqYIRfs7TS2n"
    woodpecker_github_client_secret: "c74a1df9ba42d3e16fc96dc7c7739f97347f66a8"
    woodpecker_agent_secret: "1eed3577eafef3faad25cf073c3c5cc8e479d7f1950280e0c48fc472059cd094"
    woodpecker_plugins_privileged: woodpeckerci/plugin-docker-buildx:6.0.0,woodpeckerci/plugin-ansible
    #woodpecker agent vars

  tasks:
    - name: Create Data Dir Woodpecker
      become: yes
      ansible.builtin.file:
        path: "{{woodpecker_data_dir}}"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: "0775"
        recurse: yes
      when: inventory_hostname in groups['ci-root']
    
    - name: Create Data Dir Woodpecker Agent
      become: yes
      ansible.builtin.file:
        path: "{{woodpecker_agent_data_dir}}"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: "0775"
        recurse: yes
      when: inventory_hostname in groups['ci-worker']
    
    - name: Create Deployment Dir CI
      become: yes
      ansible.builtin.file:
        path: "{{working_dir_name}}"
        state: directory
        owner: root
        group: root
        mode: "0775"
        recurse: yes
      run_once: true
      delegate_to: "{{ (groups['swarm-managers'][0]) }}"
    
    - name: "Copy docker compose into server"
      ansible.builtin.template:
        src: ./docker-compose.yaml
        dest: "{{working_dir_name}}/docker-compose.yaml" 
      run_once: true
      delegate_to: "{{ (groups['swarm-managers'][0]) }}"
    
    - name: "Start Stack"
      docker_stack:
        state: present
        with_registry_auth: yes
        prune: yes
        resolve_image: always
        name: "databuddy_ci"
        compose:
          - "{{working_dir_name}}/docker-compose.yaml"
      run_once: true
      delegate_to: "{{ (groups['swarm-managers'][0]) }}"
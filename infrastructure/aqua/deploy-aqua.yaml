---
- hosts: "infra-nodes"
  name: "Deploy Aqua Stack"
  gather_facts: true
  environment: 
    PIP_BREAK_SYSTEM_PACKAGES: 1
  vars:
    postgres_uid: "70"
    postgres_gid: "70"
    postgresql_dir_name: "/data/aqua/postgresql/data"
    clickhouse_dir_name: "/data/aqua/clickhouse/data"
    clickhouse_logs_dir_name: "/var/log/clickhouse"
    redis_dir_name: "/data/aqua/redis/data"
    working_dir_name: "aqua"
  
  tasks:
    - name: Create postgres group
      become: true
      group:
        name: "postgres"
        gid: "{{postgres_gid}}"
        state: present
      when: inventory_hostname in groups['pgsql']

    - name: Create postgres Users Task
      become: true
      user:
        name: "postgres"
        uid: "{{postgres_uid}}"
        state: present
        create_home: false
        shell: /sbin/nologin
        groups: "postgres"
        append: yes
      when: inventory_hostname in groups['pgsql']
    
    - name: Create Data Dir For Postgres
      become: true
      ansible.builtin.file:
        path: "{{postgresql_dir_name}}"
        state: directory
        mode: "0775"
        owner: "{{postgres_uid}}"
        group: "{{postgres_gid}}"
        recurse: yes
      when: inventory_hostname in groups['pgsql']
    
    - name: Create Data Dir For Clickhouse
      become: true
      ansible.builtin.file:
        path: "{{clickhouse_dir_name}}"
        state: directory
        mode: "0775"
        owner: "{{postgres_uid}}"
        group: "{{postgres_gid}}"
        recurse: yes
      when: inventory_hostname in groups['clickhouse']

    
    - name: Create Data Dir For Clickhouse Logs
      become: true
      ansible.builtin.file:
        path: "{{clickhouse_logs_dir_name}}"
        state: directory
        mode: "0775"
        owner: "{{postgres_uid}}"
        group: "{{postgres_gid}}"
        recurse: yes
      when: inventory_hostname in groups['clickhouse']

    - name: Create Working Directory Directory
      ansible.builtin.file:
        path: "{{working_dir_name}}"
        state: directory
        owner: root
        group: root
        mode: "0775"
        recurse: yes
      run_once: true
      become: yes
      delegate_to: "{{ (groups['swarm-managers'][0]) }}"
    
    - name: "Copy docker compose into server"
      ansible.builtin.template:
        src: ./docker-compose.yaml
        dest: "{{working_dir_name}}/docker-compose.yaml" 
      run_once: true
      delegate_to: "{{ (groups['swarm-managers'][0]) }}"
    
    - name: "Start Stack"
      docker_stack:
        state: present
        with_registry_auth: yes
        prune: yes
        resolve_image: always
        name: "databuddy_aqua"
        compose:
          - "{{working_dir_name}}/docker-compose.yaml"
      run_once: true
      delegate_to: "{{ (groups['swarm-managers'][0]) }}"
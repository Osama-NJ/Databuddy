x-databuddy-env:
  &databuddy-env
    CLICKHOUSE_URL: "http://databuddy:databuddy@localhost:8123/database=databuddy "
    IPINFO_TOKEN: "{{ipinfo_token}}" # secret
    REDIS_URL: "redis://redis:6379"
    QUEUE_REDIS_URL: "redis://redis:6379"
    AI_API_KEY: "{{ai_api_key}}" # secret
    BETTER_AUTH_SECRET: "{{better_auth_secret | regex_replace('\\$', '$$')}}" # secret
    BETTER_AUTH_URL: "{{better_auth_url}}" 
    GITHUB_CLIENT_ID: "{{github_client_id}}"
    GITHUB_CLIENT_SECRET: "{{github_client_secret}}"  # secret
    GOOGLE_CLIENT_ID: "{{google_client_id}}"
    GOOGLE_CLIENT_SECRET: "{{google_client_secret}}" # secret
    DATABASE_URL: "postgresql://postgres:databuddy@pgsql:5432/databuddy"
    OPR_API_KEY: "{{opr_api_key}}" # secret
    NEXT_PUBLIC_API_URL: "https://{{api_host}}"
    NEXT_PUBLIC_BASKET_URL: "https://{{basket_host}}"
    PORT: 3000
    DEBUG: 0

services:
  api:
    image: "registry.databuddy.cc/api:{{version}}"
    environment: *databuddy-env
    deploy:
      mode: global
      update_config:
        parallelism: 1
        order: stop-first
        failure_action: rollback
        delay: 60s
      rollback_config:
        parallelism: 1
        order: stop-first
      placement:
        constraints:
          - node.labels.app==true
      labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`{{api_host}}`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
      - "traefik.docker.network=databuddy_ingress"
    networks:
      - databuddy_ingress
      - databuddy_aqua
    expose:
      - 3000

  dashboard:
    image: "registry.databuddy.cc/dashboard:{{version}}"
    environment: *databuddy-env
    deploy:
      mode: global
      update_config:
        parallelism: 1
        order: stop-first
        failure_action: rollback
        delay: 60s
      rollback_config:
        parallelism: 1
        order: stop-first
      placement:
        constraints:
          - node.labels.app==true
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.dashboard.rule=Host(`{{dashboard_host}}`)"
        - "traefik.http.routers.dashboard.entrypoints=websecure"
        - "traefik.http.services.dashboard.loadbalancer.server.port=3000"
        - "traefik.docker.network=databuddy_ingress"
    networks:
      - databuddy_ingress
      - databuddy_aqua
    expose:
      - 3000
  
  basket:
    image: "registry.databuddy.cc/basket:{{version}}"
    environment: *databuddy-env
    deploy:
      mode: global
      update_config:
        parallelism: 1
        order: stop-first
        failure_action: rollback
        delay: 60s
      rollback_config:
        parallelism: 1
        order: stop-first
      placement:
        constraints:
          - node.labels.app==true
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.basket.rule=Host(`{{basket_host}}`)"
        - "traefik.http.routers.basket.entrypoints=websecure"
        - "traefik.http.services.basket.loadbalancer.server.port=3000"
        - "traefik.docker.network=databuddy_ingress"
    networks:
      - databuddy_ingress
      - databuddy_aqua
    expose:
      - 3000

networks:
  databuddy_ingress:
    external: true
  databuddy_aqua:
    external: true